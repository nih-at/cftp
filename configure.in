dnl Process this file with autoconf to produce a configure script.

dnl init

AC_INIT(fn_bind.c)
AM_INIT_AUTOMAKE(cftp, 0.7+)
AM_CONFIG_HEADER(config.h)

# We want these before the checks, so the checks can modify their values.
test -z "$CFLAGS" && CFLAGS=-g auto_cflags=1

AC_PROG_CC

dnl # If we're using gcc and the user hasn't specified CFLAGS, add -O to CFLAGS.
dnl test -n "$GCC" && test -n "$auto_cflags" && CFLAGS="$CFLAGS -O"

AC_SUBST(DOMAINNAME)dnl


dnl programs

dnl libraries

TERMCAP=none
AC_CHECK_LIB(termcap, tgetent, [TERMCAP=termcap])
if test "$TERMCAP" = none
then
	AC_CHECK_LIB(curses, tgetent, [TERMCAP=curses])
fi
if test "$TERMCAP" = none
then
	AC_CHECK_LIB(ncurses, tgetent, [TERMCAP=ncurses])
fi
if test "$TERMCAP" = none
then
	AC_MSG_ERROR([can't find termcap (emulation) library])
fi
LIBS="$LIBS -l$TERMCAP"

AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(resolv, main)


dnl header files

AC_CHECK_HEADERS(sys/select.h)

AC_CACHE_CHECK([whether h_errno is declared in netdb.h],
	dlo_cv_decl_h_errno,
	AC_TRY_COMPILE([#include "netdb.h"], [h_errno = 0;],
		[dlo_cv_decl_h_errno=yes],
		[dlo_cv_decl_h_errno=no]))
if test "$dlo_cv_decl_h_errno" = yes; then
    AC_DEFINE(H_ERRNO_DECLARED)
fi


dnl typedefs
dnl structures
dnl compiler characteristics

dnl library functions

AC_REPLACE_FUNCS(strdup getcwd getdomainname strerror hstrerror basename fputchar)

AC_CHECK_FUNCS(tparam, [tparam=1], [tparam=0])
if test "$tparam" -ne 1
then
	AC_CHECK_FUNCS(tparm, , [LIBOBJS="$LIBOBJS tparam.o"])
fi

AC_CHECK_FUNCS(getopt_long, , [LIBOBJS="$LIBOBJS getopt1.o getopt.o"])

if test `expr "$LIBOBJS" : getdomainname` -ne 0
then
AC_CHECK_PROG(DOMAINNAME_PRG, domainname, YES, NO)
if test "$DOMAINNAME_PRG" = "YES"
then
	DOMAINNAME=`domainname`
else
	DOMAINNAME=""
fi
else
	DOMAINNAME=""
fi

dnl system services

dnl output
AC_OUTPUT(Makefile)
